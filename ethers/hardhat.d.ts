/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "IERC1822ProxiableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822ProxiableUpgradeable__factory>;
    getContractFactory(
      name: "IBeaconUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeaconUpgradeable__factory>;
    getContractFactory(
      name: "ERC1967UpgradeUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967UpgradeUpgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "UUPSUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSUpgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "IERC1822Proxiable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1822Proxiable__factory>;
    getContractFactory(
      name: "IBeacon",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBeacon__factory>;
    getContractFactory(
      name: "ERC1967Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Proxy__factory>;
    getContractFactory(
      name: "ERC1967Upgrade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967Upgrade__factory>;
    getContractFactory(
      name: "Proxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Proxy__factory>;
    getContractFactory(
      name: "ERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155__factory>;
    getContractFactory(
      name: "ERC1155Supply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Supply__factory>;
    getContractFactory(
      name: "ERC1155URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155URIStorage__factory>;
    getContractFactory(
      name: "IERC1155MetadataURI",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MetadataURI__factory>;
    getContractFactory(
      name: "IERC1155",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC1155Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Holder__factory>;
    getContractFactory(
      name: "ERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Receiver__factory>;
    getContractFactory(
      name: "ERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20__factory>;
    getContractFactory(
      name: "IERC20Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Metadata__factory>;
    getContractFactory(
      name: "IERC20",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Enumerable__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Enumerable__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC721Holder",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Holder__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Bridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bridge__factory>;
    getContractFactory(
      name: "UUPSSignableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.UUPSSignableUpgradeable__factory>;
    getContractFactory(
      name: "Bundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Bundler__factory>;
    getContractFactory(
      name: "BundleExecutorImplementation",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BundleExecutorImplementation__factory>;
    getContractFactory(
      name: "BundleExecutorProxy",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BundleExecutorProxy__factory>;
    getContractFactory(
      name: "BridgeFacade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.BridgeFacade__factory>;
    getContractFactory(
      name: "FeeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeManager__factory>;
    getContractFactory(
      name: "ERC1155Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155Handler__factory>;
    getContractFactory(
      name: "ERC20Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20Handler__factory>;
    getContractFactory(
      name: "ERC721Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721Handler__factory>;
    getContractFactory(
      name: "NativeHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.NativeHandler__factory>;
    getContractFactory(
      name: "SBTHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SBTHandler__factory>;
    getContractFactory(
      name: "IBridge",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridge__factory>;
    getContractFactory(
      name: "IBundler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBundler__factory>;
    getContractFactory(
      name: "IBridgeFacade",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IBridgeFacade__factory>;
    getContractFactory(
      name: "IFeeManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IFeeManager__factory>;
    getContractFactory(
      name: "IERC1155Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Handler__factory>;
    getContractFactory(
      name: "IERC20Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20Handler__factory>;
    getContractFactory(
      name: "IERC721Handler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Handler__factory>;
    getContractFactory(
      name: "INativeHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.INativeHandler__factory>;
    getContractFactory(
      name: "ISBTHandler",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISBTHandler__factory>;
    getContractFactory(
      name: "IERC1155MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155MintableBurnable__factory>;
    getContractFactory(
      name: "IERC20MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC20MintableBurnable__factory>;
    getContractFactory(
      name: "IERC721MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721MintableBurnable__factory>;
    getContractFactory(
      name: "IWrappedNative",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWrappedNative__factory>;
    getContractFactory(
      name: "IERC5192",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5192__factory>;
    getContractFactory(
      name: "ISBT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISBT__factory>;
    getContractFactory(
      name: "ISigners",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ISigners__factory>;
    getContractFactory(
      name: "Constants",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Constants__factory>;
    getContractFactory(
      name: "FeeManagerMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.FeeManagerMock__factory>;
    getContractFactory(
      name: "ERC1967ProxyMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1967ProxyMock__factory>;
    getContractFactory(
      name: "WrappedNativeMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.WrappedNativeMock__factory>;
    getContractFactory(
      name: "ERC1155MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC1155MintableBurnable__factory>;
    getContractFactory(
      name: "ERC20MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC20MintableBurnable__factory>;
    getContractFactory(
      name: "ERC721MintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721MintableBurnable__factory>;
    getContractFactory(
      name: "SBTMintableBurnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SBTMintableBurnable__factory>;
    getContractFactory(
      name: "Hashes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Hashes__factory>;
    getContractFactory(
      name: "Signers",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Signers__factory>;

    getContractAt(
      name: "IERC1822ProxiableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822ProxiableUpgradeable>;
    getContractAt(
      name: "IBeaconUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeaconUpgradeable>;
    getContractAt(
      name: "ERC1967UpgradeUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967UpgradeUpgradeable>;
    getContractAt(
      name: "Initializable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "UUPSUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSUpgradeable>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "IERC1822Proxiable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1822Proxiable>;
    getContractAt(
      name: "IBeacon",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBeacon>;
    getContractAt(
      name: "ERC1967Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Proxy>;
    getContractAt(
      name: "ERC1967Upgrade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967Upgrade>;
    getContractAt(
      name: "Proxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Proxy>;
    getContractAt(
      name: "ERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155>;
    getContractAt(
      name: "ERC1155Supply",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Supply>;
    getContractAt(
      name: "ERC1155URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155URIStorage>;
    getContractAt(
      name: "IERC1155MetadataURI",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MetadataURI>;
    getContractAt(
      name: "IERC1155",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "ERC1155Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Holder>;
    getContractAt(
      name: "ERC1155Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Receiver>;
    getContractAt(
      name: "ERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20>;
    getContractAt(
      name: "IERC20Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Metadata>;
    getContractAt(
      name: "IERC20",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Enumerable>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Enumerable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Enumerable>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC721Holder",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Holder>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Bridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bridge>;
    getContractAt(
      name: "UUPSSignableUpgradeable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.UUPSSignableUpgradeable>;
    getContractAt(
      name: "Bundler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Bundler>;
    getContractAt(
      name: "BundleExecutorImplementation",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BundleExecutorImplementation>;
    getContractAt(
      name: "BundleExecutorProxy",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BundleExecutorProxy>;
    getContractAt(
      name: "BridgeFacade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.BridgeFacade>;
    getContractAt(
      name: "FeeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeManager>;
    getContractAt(
      name: "ERC1155Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155Handler>;
    getContractAt(
      name: "ERC20Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20Handler>;
    getContractAt(
      name: "ERC721Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721Handler>;
    getContractAt(
      name: "NativeHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.NativeHandler>;
    getContractAt(
      name: "SBTHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SBTHandler>;
    getContractAt(
      name: "IBridge",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBridge>;
    getContractAt(
      name: "IBundler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBundler>;
    getContractAt(
      name: "IBridgeFacade",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IBridgeFacade>;
    getContractAt(
      name: "IFeeManager",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IFeeManager>;
    getContractAt(
      name: "IERC1155Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Handler>;
    getContractAt(
      name: "IERC20Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20Handler>;
    getContractAt(
      name: "IERC721Handler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Handler>;
    getContractAt(
      name: "INativeHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.INativeHandler>;
    getContractAt(
      name: "ISBTHandler",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISBTHandler>;
    getContractAt(
      name: "IERC1155MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155MintableBurnable>;
    getContractAt(
      name: "IERC20MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC20MintableBurnable>;
    getContractAt(
      name: "IERC721MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721MintableBurnable>;
    getContractAt(
      name: "IWrappedNative",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWrappedNative>;
    getContractAt(
      name: "IERC5192",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5192>;
    getContractAt(
      name: "ISBT",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISBT>;
    getContractAt(
      name: "ISigners",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ISigners>;
    getContractAt(
      name: "Constants",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Constants>;
    getContractAt(
      name: "FeeManagerMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.FeeManagerMock>;
    getContractAt(
      name: "ERC1967ProxyMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1967ProxyMock>;
    getContractAt(
      name: "WrappedNativeMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.WrappedNativeMock>;
    getContractAt(
      name: "ERC1155MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC1155MintableBurnable>;
    getContractAt(
      name: "ERC20MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC20MintableBurnable>;
    getContractAt(
      name: "ERC721MintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721MintableBurnable>;
    getContractAt(
      name: "SBTMintableBurnable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.SBTMintableBurnable>;
    getContractAt(
      name: "Hashes",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Hashes>;
    getContractAt(
      name: "Signers",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Signers>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
