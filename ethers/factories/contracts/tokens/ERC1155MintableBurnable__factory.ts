/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC1155MintableBurnable,
  ERC1155MintableBurnableInterface,
} from "../../../contracts/tokens/ERC1155MintableBurnable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "owner_",
        type: "address",
      },
      {
        internalType: "string",
        name: "baseURI_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "payer_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "tokenURI_",
        type: "string",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040819052600060808190526200001b91600591620001d5565b503480156200002957600080fd5b5060405162002334380380620023348339810160408190526200004c9162000291565b80620000583362000082565b6200006381620000d2565b506200006f81620000eb565b6200007a8262000100565b5050620003ce565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8051620000e7906003906020840190620001d5565b5050565b8051620000e7906005906020840190620001d5565b6000546001600160a01b03163314620001605760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b6001600160a01b038116620001c75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000157565b620001d28162000082565b50565b828054620001e39062000391565b90600052602060002090601f01602090048101928262000207576000855562000252565b82601f106200022257805160ff191683800117855562000252565b8280016001018555821562000252579182015b828111156200025257825182559160200191906001019062000235565b506200026092915062000264565b5090565b5b8082111562000260576000815560010162000265565b634e487b7160e01b600052604160045260246000fd5b60008060408385031215620002a557600080fd5b82516001600160a01b0381168114620002bd57600080fd5b602084810151919350906001600160401b0380821115620002dd57600080fd5b818601915086601f830112620002f257600080fd5b8151818111156200030757620003076200027b565b604051601f8201601f19908116603f011681019083821181831017156200033257620003326200027b565b8160405282815289868487010111156200034b57600080fd5b600093505b828410156200036f578484018601518185018701529285019262000350565b82841115620003815760008684830101525b8096505050505050509250929050565b600181811c90821680620003a657607f821691505b60208210811415620003c857634e487b7160e01b600052602260045260246000fd5b50919050565b611f5680620003de6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80634f558e7911610097578063bd85b03911610066578063bd85b03914610215578063e985e9c514610235578063f242432a14610271578063f2fde38b1461028457600080fd5b80634f558e79146101bd578063715018a6146101df5780638da5cb5b146101e7578063a22cb4651461020257600080fd5b8063124d91e5116100d3578063124d91e5146101625780632eb2c2d6146101775780633dbd5b251461018a5780634e1273f41461019d57600080fd5b8062fdd58e146100f957806301ffc9a71461011f5780630e89341c14610142575b600080fd5b61010c610107366004611582565b610297565b6040519081526020015b60405180910390f35b61013261012d3660046115c2565b610330565b6040519015158152602001610116565b6101556101503660046115df565b610382565b6040516101169190611654565b610175610170366004611667565b61038d565b005b6101756101853660046117e6565b610431565b610175610198366004611890565b6104c8565b6101b06101ab366004611924565b61054d565b6040516101169190611a2a565b6101326101cb3660046115df565b600090815260046020526040902054151590565b610175610677565b6000546040516001600160a01b039091168152602001610116565b610175610210366004611a3d565b6106ad565b61010c6102233660046115df565b60009081526004602052604090205490565b610132610243366004611a79565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205460ff1690565b61017561027f366004611aac565b6106bc565b610175610292366004611b11565b610743565b60006001600160a01b0383166103085760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b5060009081526001602090815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061036157506001600160e01b031982166303a24d0760e21b145b8061037c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606061037c826107de565b6001600160a01b0383163314806103c757506001600160a01b038316600090815260026020908152604080832033845290915290205460ff165b6104215760405162461bcd60e51b815260206004820152602560248201527f455243313135354d696e7461626c654275726e61626c653a206e6f74206170706044820152641c9bdd995960da1b60648201526084016102ff565b61042c8383836108be565b505050565b6001600160a01b03851633148061044d575061044d8533610243565b6104b45760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016102ff565b6104c18585858585610a57565b5050505050565b6000546001600160a01b031633146104f25760405162461bcd60e51b81526004016102ff90611b2c565b61050d85858560405180602001604052806000815250610c45565b6104c18483838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d6192505050565b606081518351146105b25760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016102ff565b6000835167ffffffffffffffff8111156105ce576105ce61169a565b6040519080825280602002602001820160405280156105f7578160200160208202803683370190505b50905060005b845181101561066f5761064285828151811061061b5761061b611b61565b602002602001015185838151811061063557610635611b61565b6020026020010151610297565b82828151811061065457610654611b61565b602090810291909101015261066881611b8d565b90506105fd565b509392505050565b6000546001600160a01b031633146106a15760405162461bcd60e51b81526004016102ff90611b2c565b6106ab6000610dc5565b565b6106b8338383610e15565b5050565b6001600160a01b0385163314806106d857506106d88533610243565b6107365760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016102ff565b6104c18585858585610ef6565b6000546001600160a01b0316331461076d5760405162461bcd60e51b81526004016102ff90611b2c565b6001600160a01b0381166107d25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ff565b6107db81610dc5565b50565b6000818152600660205260408120805460609291906107fc90611ba8565b80601f016020809104026020016040519081016040528092919081815260200182805461082890611ba8565b80156108755780601f1061084a57610100808354040283529160200191610875565b820191906000526020600020905b81548152906001019060200180831161085857829003601f168201915b5050505050905060008151116108935761088e83611032565b6108b7565b6005816040516020016108a7929190611bff565b6040516020818303038152906040525b9392505050565b6001600160a01b0383166109205760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016102ff565b33600061092c846110c6565b90506000610939846110c6565b905061095983876000858560405180602001604052806000815250611111565b60008581526001602090815260408083206001600160a01b038a168452909152902054848110156109d85760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016102ff565b60008681526001602090815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46040805160208101909152600090525b50505050505050565b8151835114610ab95760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016102ff565b6001600160a01b038416610adf5760405162461bcd60e51b81526004016102ff90611ca6565b33610aee818787878787611111565b60005b8451811015610bd7576000858281518110610b0e57610b0e611b61565b602002602001015190506000858381518110610b2c57610b2c611b61565b60209081029190910181015160008481526001835260408082206001600160a01b038e168352909352919091205490915081811015610b7d5760405162461bcd60e51b81526004016102ff90611ceb565b60008381526001602090815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610bbc908490611d35565b9250508190555050505080610bd090611b8d565b9050610af1565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610c27929190611d4d565b60405180910390a4610c3d81878787878761111f565b505050505050565b6001600160a01b038416610ca55760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016102ff565b336000610cb1856110c6565b90506000610cbe856110c6565b9050610ccf83600089858589611111565b60008681526001602090815260408083206001600160a01b038b16845290915281208054879290610d01908490611d35565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610a4e8360008989898961128a565b60008281526006602090815260409091208251610d80928401906114cd565b50817f6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b610dac84610382565b604051610db99190611654565b60405180910390a25050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b816001600160a01b0316836001600160a01b03161415610e895760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016102ff565b6001600160a01b03838116600081815260026020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038416610f1c5760405162461bcd60e51b81526004016102ff90611ca6565b336000610f28856110c6565b90506000610f35856110c6565b9050610f45838989858589611111565b60008681526001602090815260408083206001600160a01b038c16845290915290205485811015610f885760405162461bcd60e51b81526004016102ff90611ceb565b60008781526001602090815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290610fc7908490611d35565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611027848a8a8a8a8a61128a565b505050505050505050565b60606003805461104190611ba8565b80601f016020809104026020016040519081016040528092919081815260200182805461106d90611ba8565b80156110ba5780601f1061108f576101008083540402835291602001916110ba565b820191906000526020600020905b81548152906001019060200180831161109d57829003601f168201915b50505050509050919050565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061110057611100611b61565b602090810291909101015292915050565b610c3d868686868686611354565b6001600160a01b0384163b15610c3d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906111639089908990889088908890600401611d72565b602060405180830381600087803b15801561117d57600080fd5b505af19250505080156111ad575060408051601f3d908101601f191682019092526111aa91810190611dd0565b60015b61125a576111b9611ded565b806308c379a014156111f357506111ce611e09565b806111d957506111f5565b8060405162461bcd60e51b81526004016102ff9190611654565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016102ff565b6001600160e01b0319811663bc197c8160e01b14610a4e5760405162461bcd60e51b81526004016102ff90611e93565b6001600160a01b0384163b15610c3d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906112ce9089908990889088908890600401611edb565b602060405180830381600087803b1580156112e857600080fd5b505af1925050508015611318575060408051601f3d908101601f1916820190925261131591810190611dd0565b60015b611324576111b9611ded565b6001600160e01b0319811663f23a6e6160e01b14610a4e5760405162461bcd60e51b81526004016102ff90611e93565b6001600160a01b0385166113db5760005b83518110156113d95782818151811061138057611380611b61565b60200260200101516004600086848151811061139e5761139e611b61565b6020026020010151815260200190815260200160002060008282546113c39190611d35565b909155506113d2905081611b8d565b9050611365565b505b6001600160a01b038416610c3d5760005b8351811015610a4e57600084828151811061140957611409611b61565b60200260200101519050600084838151811061142757611427611b61565b60200260200101519050600060046000848152602001908152602001600020549050818110156114aa5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a206275726e20616d6f756e74206578636565647320746f74604482015267616c537570706c7960c01b60648201526084016102ff565b600092835260046020526040909220910390556114c681611b8d565b90506113ec565b8280546114d990611ba8565b90600052602060002090601f0160209004810192826114fb5760008555611541565b82601f1061151457805160ff1916838001178555611541565b82800160010185558215611541579182015b82811115611541578251825591602001919060010190611526565b5061154d929150611551565b5090565b5b8082111561154d5760008155600101611552565b80356001600160a01b038116811461157d57600080fd5b919050565b6000806040838503121561159557600080fd5b61159e83611566565b946020939093013593505050565b6001600160e01b0319811681146107db57600080fd5b6000602082840312156115d457600080fd5b81356108b7816115ac565b6000602082840312156115f157600080fd5b5035919050565b60005b838110156116135781810151838201526020016115fb565b83811115611622576000848401525b50505050565b600081518084526116408160208601602086016115f8565b601f01601f19169290920160200192915050565b6020815260006108b76020830184611628565b60008060006060848603121561167c57600080fd5b61168584611566565b95602085013595506040909401359392505050565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156116d6576116d661169a565b6040525050565b600067ffffffffffffffff8211156116f7576116f761169a565b5060051b60200190565b600082601f83011261171257600080fd5b8135602061171f826116dd565b60405161172c82826116b0565b83815260059390931b850182019282810191508684111561174c57600080fd5b8286015b848110156117675780358352918301918301611750565b509695505050505050565b600082601f83011261178357600080fd5b813567ffffffffffffffff81111561179d5761179d61169a565b6040516117b4601f8301601f1916602001826116b0565b8181528460208386010111156117c957600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a086880312156117fe57600080fd5b61180786611566565b945061181560208701611566565b9350604086013567ffffffffffffffff8082111561183257600080fd5b61183e89838a01611701565b9450606088013591508082111561185457600080fd5b61186089838a01611701565b9350608088013591508082111561187657600080fd5b5061188388828901611772565b9150509295509295909350565b6000806000806000608086880312156118a857600080fd5b6118b186611566565b94506020860135935060408601359250606086013567ffffffffffffffff808211156118dc57600080fd5b818801915088601f8301126118f057600080fd5b8135818111156118ff57600080fd5b89602082850101111561191157600080fd5b9699959850939650602001949392505050565b6000806040838503121561193757600080fd5b823567ffffffffffffffff8082111561194f57600080fd5b818501915085601f83011261196357600080fd5b81356020611970826116dd565b60405161197d82826116b0565b83815260059390931b850182019282810191508984111561199d57600080fd5b948201945b838610156119c2576119b386611566565b825294820194908201906119a2565b965050860135925050808211156119d857600080fd5b506119e585828601611701565b9150509250929050565b600081518084526020808501945080840160005b83811015611a1f57815187529582019590820190600101611a03565b509495945050505050565b6020815260006108b760208301846119ef565b60008060408385031215611a5057600080fd5b611a5983611566565b915060208301358015158114611a6e57600080fd5b809150509250929050565b60008060408385031215611a8c57600080fd5b611a9583611566565b9150611aa360208401611566565b90509250929050565b600080600080600060a08688031215611ac457600080fd5b611acd86611566565b9450611adb60208701611566565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b0557600080fd5b61188388828901611772565b600060208284031215611b2357600080fd5b6108b782611566565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415611ba157611ba1611b77565b5060010190565b600181811c90821680611bbc57607f821691505b60208210811415611bdd57634e487b7160e01b600052602260045260246000fd5b50919050565b60008151611bf58185602086016115f8565b9290920192915050565b600080845481600182811c915080831680611c1b57607f831692505b6020808410821415611c3b57634e487b7160e01b86526022600452602486fd5b818015611c4f5760018114611c6057611c8d565b60ff19861689528489019650611c8d565b60008b81526020902060005b86811015611c855781548b820152908501908301611c6c565b505084890196505b505050505050611c9d8185611be3565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60008219821115611d4857611d48611b77565b500190565b604081526000611d6060408301856119ef565b8281036020840152611c9d81856119ef565b6001600160a01b0386811682528516602082015260a060408201819052600090611d9e908301866119ef565b8281036060840152611db081866119ef565b90508281036080840152611dc48185611628565b98975050505050505050565b600060208284031215611de257600080fd5b81516108b7816115ac565b600060033d1115611e065760046000803e5060005160e01c5b90565b600060443d1015611e175790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611e4757505050505090565b8285019150815181811115611e5f5750505050505090565b843d8701016020828501011115611e795750505050505090565b611e88602082860101876116b0565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611f1590830184611628565b97965050505050505056fea2646970667358221220aabd3ca14c2d7b7262a6ca290d44a093e48dd80e4eb6c4def376f4db1a353c2a64736f6c63430008090033";

type ERC1155MintableBurnableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MintableBurnableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155MintableBurnable__factory extends ContractFactory {
  constructor(...args: ERC1155MintableBurnableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1155MintableBurnable";
  }

  override deploy(
    owner_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155MintableBurnable> {
    return super.deploy(
      owner_,
      baseURI_,
      overrides || {}
    ) as Promise<ERC1155MintableBurnable>;
  }
  override getDeployTransaction(
    owner_: PromiseOrValue<string>,
    baseURI_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(owner_, baseURI_, overrides || {});
  }
  override attach(address: string): ERC1155MintableBurnable {
    return super.attach(address) as ERC1155MintableBurnable;
  }
  override connect(signer: Signer): ERC1155MintableBurnable__factory {
    return super.connect(signer) as ERC1155MintableBurnable__factory;
  }
  static readonly contractName: "ERC1155MintableBurnable";

  public readonly contractName: "ERC1155MintableBurnable";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MintableBurnableInterface {
    return new utils.Interface(_abi) as ERC1155MintableBurnableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155MintableBurnable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC1155MintableBurnable;
  }
}
