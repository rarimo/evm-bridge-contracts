/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeFacade,
  BridgeFacadeInterface,
} from "../../../contracts/facade/BridgeFacade";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "AddedFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "RemovedFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "UpdatedFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawnFeeToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "__BridgeFacade_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "__FeeManager_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.AddFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "addFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeERC1155Parameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC1155Handler.DepositERC1155Parameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositERC1155",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeERC20Parameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC20Handler.DepositERC20Parameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeERC721Parameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC721Handler.DepositERC721Parameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositERC721",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeNativeParameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
        ],
        internalType: "struct INativeHandler.DepositNativeParameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeSBTParameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
        ],
        internalType: "struct ISBTHandler.DepositSBTParameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositSBT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken_",
        type: "address",
      },
    ],
    name: "getCommission",
    outputs: [
      {
        internalType: "uint256",
        name: "commission_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.RemoveFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "removeFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.UpdateFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "updateFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "upgradeToWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC1155Handler.WithdrawERC1155Parameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC20Handler.WithdrawERC20Parameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC721Handler.WithdrawERC721Parameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.WithdrawFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct INativeHandler.WithdrawNativeParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct ISBTHandler.WithdrawSBTParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawSBT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051613c9b61005a600039600081816108a9015281816108e901528181610b3a01528181610b7a01528181610bf001528181610c300152610cae0152613c9b6000f3fe6080604052600436106101345760003560e01c806373fb5a66116100ab5780639f33cf221161006f5780639f33cf221461030f578063a77c8c861461032f578063a7f40f2f1461034f578063d93ff67814610362578063e78cea9214610375578063f334dcb2146103ad57600080fd5b806373fb5a6614610289578063922e37c01461029c578063942b0e31146102bc5780639950523c146102dc5780639c9ae4f8146102ef57600080fd5b80634eb5943a116100fd5780634eb5943a146101ce5780634f1ef286146101ee57806352d046611461020157806352d1902d1461022157806363925ea214610249578063737102581461026957600080fd5b8062903e5d146101395780631087dcd11461015b5780631c2507081461016e5780633659cfe61461018e5780634915b86e146101ae575b600080fd5b34801561014557600080fd5b5061015961015436600461299f565b6103e3565b005b6101596101693660046129fe565b61056b565b34801561017a57600080fd5b50610159610189366004612a4c565b610752565b34801561019a57600080fd5b506101596101a9366004612aa7565b61089e565b3480156101ba57600080fd5b506101596101c9366004612ad6565b610984565b3480156101da57600080fd5b506101596101e9366004612ad6565b610a6c565b6101596101fc366004612b7f565b610b2f565b34801561020d57600080fd5b5061015961021c366004612c11565b610be5565b34801561022d57600080fd5b50610236610ca1565b6040519081526020015b60405180910390f35b34801561025557600080fd5b50610159610264366004612ad6565b610d54565b34801561027557600080fd5b50610159610284366004612ca7565b610e17565b6101596102973660046129fe565b610f63565b3480156102a857600080fd5b506101596102b7366004612ced565b6110d5565b3480156102c857600080fd5b506101596102d7366004612ca7565b611221565b6101596102ea366004612d21565b61136d565b3480156102fb57600080fd5b5061015961030a366004612aa7565b611553565b34801561031b57600080fd5b5061015961032a366004612d77565b6115ca565b34801561033b57600080fd5b5061015961034a366004612aa7565b6116a2565b61015961035d366004612dab565b61172f565b610159610370366004612def565b6117f8565b34801561038157600080fd5b50606554610395906001600160a01b031681565b6040516001600160a01b039091168152602001610240565b3480156103b957600080fd5b506102366103c8366004612aa7565b6001600160a01b031660009081526066602052604090205490565b6065546001600160a01b0316806302fd4e266103fe8461196c565b61040b6080860186612e33565b60a086013561042060e0880160c08901612aa7565b61042d60e0890189612e53565b6040518763ffffffff1660e01b815260040161044e96959493929190612f8e565b600060405180830381600087803b15801561046857600080fd5b505af115801561047c573d6000803e3d6000fd5b50600092506104919150506080840184612e33565b61049f906020810190612e53565b9050111561050b57604051632ddb6a5d60e21b81526001600160a01b0382169063b76da974906104d3908590600401613023565b600060405180830381600087803b1580156104ed57600080fd5b505af19250505080156104fe575060015b6105075761050b565b5050565b60405162903e5d60e01b81526001600160a01b0382169062903e5d90610535908590600401613023565b600060405180830381600087803b15801561054f57600080fd5b505af1158015610563573d6000803e3d6000fd5b505050505050565b600061057a6020830183612aa7565b6001600160a01b031614156105aa5760405162461bcd60e51b81526004016105a19061311f565b60405180910390fd5b6105bf6105ba6020840184612aa7565b6119bc565b156105dc5760405162461bcd60e51b81526004016105a190613156565b6065546001600160a01b03166105f860c0830160a0840161319b565b156106745761060a6020830183612aa7565b60405163079cc67960e41b8152336004820152602084013560248201526001600160a01b0391909116906379cc679090604401600060405180830381600087803b15801561065757600080fd5b505af115801561066b573d6000803e3d6000fd5b505050506106ef565b6106816020830183612aa7565b604051632142170760e11b81523360048201526001600160a01b0383811660248301526020850135604483015291909116906342842e0e90606401600060405180830381600087803b1580156106d657600080fd5b505af11580156106ea573d6000803e3d6000fd5b505050505b604051636a38abbf60e01b81526001600160a01b03821690636a38abbf9061071b908590600401613266565b600060405180830381600087803b15801561073557600080fd5b505af1158015610749573d6000803e3d6000fd5b50505050505050565b6065546001600160a01b0316806302fd4e2661076d84611abe565b61077a6060860186612e33565b608086013561078f60c0880160a08901612aa7565b61079c60c0890189612e53565b6040518763ffffffff1660e01b81526004016107bd96959493929190612f8e565b600060405180830381600087803b1580156107d757600080fd5b505af11580156107eb573d6000803e3d6000fd5b50600092506108009150506060840184612e33565b61080e906020810190612e53565b9050111561087257604051639ae00a5760e01b81526001600160a01b03821690639ae00a5790610842908590600401613279565b600060405180830381600087803b15801561085c57600080fd5b505af192505050801561086d575060015b610507575b604051630384a0e160e31b81526001600160a01b03821690631c25070890610535908590600401613279565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108e75760405162461bcd60e51b81526004016105a190613351565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610919611af2565b6001600160a01b03161461093f5760405162461bcd60e51b81526004016105a19061339d565b61094881611b0e565b6109818160005b6040519080825280601f01601f191660200182016040528015610979576020820181803683370190505b506000611b65565b50565b61099160208201826133e9565b905061099d82806133e9565b9050146109bc5760405162461bcd60e51b81526004016105a190613432565b6109eb60005b6109cc83806133e9565b6109d960208601866133e9565b6109e66040880188612e53565b611cdf565b60005b6109f882806133e9565b905081101561050757610a5c610a0e83806133e9565b83818110610a1e57610a1e613475565b9050602002016020810190610a339190612aa7565b610a4060208501856133e9565b84818110610a5057610a50613475565b90506020020135611e1e565b610a65816134a1565b90506109ee565b610a7960208201826133e9565b9050610a8582806133e9565b905014610aa45760405162461bcd60e51b81526004016105a190613432565b610aae60016109c2565b60005b610abb82806133e9565b905081101561050757610b1f610ad183806133e9565b83818110610ae157610ae1613475565b9050602002016020810190610af69190612aa7565b610b0360208501856133e9565b84818110610b1357610b13613475565b90506020020135611ed5565b610b28816134a1565b9050610ab1565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610b785760405162461bcd60e51b81526004016105a190613351565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610baa611af2565b6001600160a01b031614610bd05760405162461bcd60e51b81526004016105a19061339d565b610bd982611b0e565b61050782826001611b65565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610c2e5760405162461bcd60e51b81526004016105a190613351565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c60611af2565b6001600160a01b031614610c865760405162461bcd60e51b81526004016105a19061339d565b610c91838383611f9f565b610c9c83600061094f565b505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d415760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105a1565b50600080516020613c1f83398151915290565b610d6160208201826133e9565b9050610d6d82806133e9565b905014610d8c5760405162461bcd60e51b81526004016105a190613432565b610d9660026109c2565b60005b610da382806133e9565b905081101561050757610e07610db983806133e9565b83818110610dc957610dc9613475565b9050602002016020810190610dde9190612aa7565b610deb60208501856133e9565b84818110610dfb57610dfb613475565b9050602002013561202c565b610e10816134a1565b9050610d99565b6065546001600160a01b0316806302fd4e26610e3284611abe565b610e3f6060860186612e33565b6080860135610e5460c0880160a08901612aa7565b610e6160c0890189612e53565b6040518763ffffffff1660e01b8152600401610e8296959493929190612f8e565b600060405180830381600087803b158015610e9c57600080fd5b505af1158015610eb0573d6000803e3d6000fd5b5060009250610ec59150506060840184612e33565b610ed3906020810190612e53565b90501115610f37576040516326a0c35360e21b81526001600160a01b03821690639a830d4c90610f079085906004016134bc565b600060405180830381600087803b158015610f2157600080fd5b505af1925050508015610f32575060015b610507575b604051630e6e204b60e31b81526001600160a01b038216906373710258906105359085906004016134bc565b6000610f726020830183612aa7565b6001600160a01b03161415610f995760405162461bcd60e51b81526004016105a19061311f565b6000816020013511610fbd5760405162461bcd60e51b81526004016105a19061357d565b610fcd6105ba6020840184612aa7565b15610fea5760405162461bcd60e51b81526004016105a190613156565b6065546001600160a01b031661100660c0830160a0840161319b565b15611082576110186020830183612aa7565b60405163079cc67960e41b8152336004820152602084013560248201526001600160a01b0391909116906379cc679090604401600060405180830381600087803b15801561106557600080fd5b505af1158015611079573d6000803e3d6000fd5b505050506110a9565b6110a93382602085018035906110989087612aa7565b6001600160a01b03169291906120e2565b60405163bebd5a0b60e01b81526001600160a01b0382169063bebd5a0b9061071b908590600401613266565b6065546001600160a01b0316806302fd4e266110f084612153565b6110fd6020860186612e33565b60408601356111126080880160608901612aa7565b61111f6080890189612e53565b6040518763ffffffff1660e01b815260040161114096959493929190612f8e565b600060405180830381600087803b15801561115a57600080fd5b505af115801561116e573d6000803e3d6000fd5b50600092506111839150506020840184612e33565b611191906020810190612e53565b905011156111f55760405163c4f54e2160e01b81526001600160a01b0382169063c4f54e21906111c59085906004016135b4565b600060405180830381600087803b1580156111df57600080fd5b505af19250505080156111f0575060015b610507575b604051630248b8df60e61b81526001600160a01b0382169063922e37c0906105359085906004016135b4565b6065546001600160a01b0316806302fd4e2661123c84612167565b6112496040860186612e33565b606086013561125e60a0880160808901612aa7565b61126b60a0890189612e53565b6040518763ffffffff1660e01b815260040161128c96959493929190612f8e565b600060405180830381600087803b1580156112a657600080fd5b505af11580156112ba573d6000803e3d6000fd5b50600092506112cf9150506040840184612e33565b6112dd906020810190612e53565b905011156113415760405163e53507bd60e01b81526001600160a01b0382169063e53507bd9061131190859060040161363b565b600060405180830381600087803b15801561132b57600080fd5b505af192505050801561133c575060015b610507575b60405163942b0e3160e01b81526001600160a01b0382169063942b0e319061053590859060040161363b565b600061137c6020830183612aa7565b6001600160a01b031614156113a35760405162461bcd60e51b81526004016105a19061311f565b60008160400135116113c75760405162461bcd60e51b81526004016105a19061357d565b6113d76105ba6020840184612aa7565b156113f45760405162461bcd60e51b81526004016105a190613156565b6065546001600160a01b031661141060e0830160c0840161319b565b15611496576114226020830183612aa7565b6040805163124d91e560e01b8152336004820152602085013560248201529084013560448201526001600160a01b03919091169063124d91e590606401600060405180830381600087803b15801561147957600080fd5b505af115801561148d573d6000803e3d6000fd5b50505050611527565b6114a36020830183612aa7565b60408051637921219560e11b81523360048201526001600160a01b0384811660248301526020860135604483015291850135606482015260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561150e57600080fd5b505af1158015611522573d6000803e3d6000fd5b505050505b604051634b4d778360e11b81526001600160a01b0382169063969aef069061071b9085906004016136f5565b600061155f60016121a9565b90508015611577576000805461ff0019166101001790555b611580826116a2565b8015610507576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b6115d760408201826133e9565b90506115e660208301836133e9565b9050146116055760405162461bcd60e51b81526004016105a190613432565b61160e81612236565b60005b61161e60208301836133e9565b9050811015610507576116926116376020840184612aa7565b61164460208501856133e9565b8481811061165457611654613475565b90506020020160208101906116699190612aa7565b61167660408601866133e9565b8581811061168657611686613475565b905060200201356123a3565b61169b816134a1565b9050611611565b600054610100900460ff1661170d5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105a1565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b803561174d5760405162461bcd60e51b81526004016105a19061357d565b803561175f6105ba6020850185612aa7565b146117ac5760405162461bcd60e51b815260206004820152601a60248201527f4272696467654661636164653a2077726f6e6720616d6f756e7400000000000060448201526064016105a1565b60655460405163b27588e560e01b81526001600160a01b039091169063b27588e5908335906117df90859060040161379b565b6000604051808303818588803b15801561073557600080fd5b60006118076020830183612aa7565b6001600160a01b0316141561182e5760405162461bcd60e51b81526004016105a19061311f565b3361183c6020830183612aa7565b6040516331a9108f60e11b8152602084013560048201526001600160a01b039190911690636352211e9060240160206040518083038186803b15801561188157600080fd5b505afa158015611895573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118b99190613819565b6001600160a01b03161461190f5760405162461bcd60e51b815260206004820152601e60248201527f4272696467654661636164653a20696e76616c696420746f6b656e206964000060448201526064016105a1565b61191f6105ba6020840184612aa7565b1561193c5760405162461bcd60e51b81526004016105a190613156565b60655460405163755f382360e01b81526001600160a01b039091169063755f382390610535908490600401613836565b606061197b6020830183612aa7565b602083013561198d6040850185612e53565b85606001356040516020016119a69594939291906138d1565b6040516020818303038152906040529050919050565b6001600160a01b038116600090815260666020526040902054349080611a245760405162461bcd60e51b815260206004820152601b60248201527f4665654d616e616765723a2077726f6e672066656520746f6b656e000000000060448201526064016105a1565b6001600160a01b038316611a935781811115611a825760405162461bcd60e51b815260206004820152601f60248201527f4665654d616e616765723a2077726f6e67206e617469766520616d6f756e740060448201526064016105a1565b611a8c8183613900565b9150611ab8565b6001600160a01b0383811614611ab857611ab86001600160a01b0384163330846120e2565b50919050565b6060611acd6020830183612aa7565b6020830135611adf6040850185612e53565b6040516020016119a69493929190613917565b600080516020613c1f833981519152546001600160a01b031690565b60405162461bcd60e51b815260206004820152602660248201527f4665654d616e616765723a20746869732075706772616465206d6574686f642060448201526534b99037b33360d11b60648201526084016105a1565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611b9857610c9c83612525565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611bd157600080fd5b505afa925050508015611c01575060408051601f3d908101601f19168201909252611bfe91810190613945565b60015b611c645760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105a1565b600080516020613c1f8339815191528114611cd35760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105a1565b50610c9c8383836125c1565b60655460405163413f04cf60e11b815260ff891660048201523060248201526001600160a01b03909116906000908190839063827e099e9060440160006040518083038186803b158015611d3257600080fd5b505afa158015611d46573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611d6e919081019061395e565b9150915060008130848d8d8d8d8d604051602001611d93989796959493929190613a4c565b60408051601f19818403018152908290528051602090910120630e3754f960e41b825291506001600160a01b0385169063e3754f9090611ddf908e90309086908c908c90600401613ab6565b600060405180830381600087803b158015611df957600080fd5b505af1158015611e0d573d6000803e3d6000fd5b505050505050505050505050505050565b6001600160a01b03821660009081526066602052604090205415611e845760405162461bcd60e51b815260206004820181905260248201527f4665654d616e616765723a20746f6b656e20616c72656164792065786973747360448201526064016105a1565b6001600160a01b038216600081815260666020908152604091829020849055815192835282018390527f5d966ab5c51224ee3c5146e53a0b57969d97d0e1779f52a1017813c13344efc491016115be565b6001600160a01b0382166000908152606660205260409020548114611f4e5760405162461bcd60e51b815260206004820152602960248201527f4665654d616e616765723a2077726f6e6720746f6b656e2061646472657373206044820152681bdc88185b5bdd5b9d60ba1b60648201526084016105a1565b6001600160a01b038216600081815260666020908152604080832092909255815192835282018390527feac220a493a0693e32f1240aae311de65b2d84391a9ba8310fcaf359d7c9bd8f91016115be565b6001600160a01b038316611ff55760405162461bcd60e51b815260206004820152601860248201527f4665654d616e616765723a207a65726f2061646472657373000000000000000060448201526064016105a1565b6065546001600160a01b0316637d1e764b6004308686866040518663ffffffff1660e01b815260040161071b959493929190613ae7565b6001600160a01b0382166000908152606660205260409020546120915760405162461bcd60e51b815260206004820152601f60248201527f4665654d616e616765723a20746f6b656e20646f65736e27742065786973740060448201526064016105a1565b6001600160a01b038216600081815260666020908152604091829020849055815192835282018390527f70698787bb7456af2d4339ba1e7d059c4eda7c473412e7ed2c0d5b361a49d50a91016115be565b6040516001600160a01b038085166024830152831660448201526064810182905261214d9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526125e6565b50505050565b6040805182356020820152606091016119a6565b60606121766020830183612aa7565b82602001356040516020016119a692919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60008054610100900460ff16156121f0578160ff1660011480156121cc5750303b155b6121e85760405162461bcd60e51b81526004016105a190613b1d565b506000919050565b60005460ff8084169116106122175760405162461bcd60e51b81526004016105a190613b1d565b506000805460ff191660ff92909216919091179055600190565b919050565b60655460405163413f04cf60e11b81526003600482018190523060248301526001600160a01b0390921691906000908190849063827e099e9060440160006040518083038186803b15801561228a57600080fd5b505afa15801561229e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526122c6919081019061395e565b90925090506000816122db6020880188612aa7565b3085876122eb60208c018c6133e9565b6122f860408e018e6133e9565b60405160200161231099989796959493929190613b6b565b60408051601f19818403018152919052805160209091012090506001600160a01b03851663e3754f9085308461234960608c018c612e53565b6040518663ffffffff1660e01b8152600401612369959493929190613ab6565b600060405180830381600087803b15801561238357600080fd5b505af1158015612397573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b0382811614156123fc5760405162461bcd60e51b815260206004820152601c60248201527f4665654d616e616765723a20636f6d6d697373696f6e20746f6b656e0000000060448201526064016105a1565b6001600160a01b0382166124c1576000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114612457576040519150601f19603f3d011682016040523d82523d6000602084013e61245c565b606091505b50509050806124bb5760405162461bcd60e51b815260206004820152602560248201527f4665654d616e616765723a206661696c656420746f207769746864726177206e604482015264617469766560d81b60648201526084016105a1565b506124d5565b6124d56001600160a01b03831684836126b8565b604080516001600160a01b038086168252841660208201529081018290527f0221f5dbeb176269bc9dbce8b10193c570930431bbe525ae79b4599910500bf49060600160405180910390a1505050565b6001600160a01b0381163b6125925760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105a1565b600080516020613c1f83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b6125ca836126e8565b6000825111806125d75750805b15610c9c5761214d8383612728565b600061263b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661281c9092919063ffffffff16565b805190915015610c9c57808060200190518101906126599190613bdc565b610c9c5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105a1565b6040516001600160a01b038316602482015260448101829052610c9c90849063a9059cbb60e01b90606401612116565b6126f181612525565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606001600160a01b0383163b6127905760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105a1565b600080846001600160a01b0316846040516127ab9190613bf9565b600060405180830381855af49150503d80600081146127e6576040519150601f19603f3d011682016040523d82523d6000602084013e6127eb565b606091505b50915091506128138282604051806060016040528060278152602001613c3f60279139612835565b95945050505050565b606061282b848460008561286e565b90505b9392505050565b6060831561284457508161282e565b8251156128545782518084602001fd5b8160405162461bcd60e51b81526004016105a19190613c0b565b6060824710156128cf5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105a1565b6001600160a01b0385163b6129265760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105a1565b600080866001600160a01b031685876040516129429190613bf9565b60006040518083038185875af1925050503d806000811461297f576040519150601f19603f3d011682016040523d82523d6000602084013e612984565b606091505b5091509150612994828286612835565b979650505050505050565b6000602082840312156129b157600080fd5b81356001600160401b038111156129c757600080fd5b8201610120818503121561282e57600080fd5b600060208284031215611ab857600080fd5b600060c08284031215611ab857600080fd5b60008060408385031215612a1157600080fd5b612a1b84846129da565b915060208301356001600160401b03811115612a3657600080fd5b612a42858286016129ec565b9150509250929050565b600060208284031215612a5e57600080fd5b81356001600160401b03811115612a7457600080fd5b8201610100818503121561282e57600080fd5b6001600160a01b038116811461098157600080fd5b803561223181612a87565b600060208284031215612ab957600080fd5b813561282e81612a87565b600060608284031215611ab857600080fd5b600060208284031215612ae857600080fd5b81356001600160401b03811115612afe57600080fd5b612b0a84828501612ac4565b949350505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612b5057612b50612b12565b604052919050565b60006001600160401b03821115612b7157612b71612b12565b50601f01601f191660200190565b60008060408385031215612b9257600080fd5b8235612b9d81612a87565b915060208301356001600160401b03811115612bb857600080fd5b8301601f81018513612bc957600080fd5b8035612bdc612bd782612b58565b612b28565b818152866020838501011115612bf157600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060408486031215612c2657600080fd5b8335612c3181612a87565b925060208401356001600160401b0380821115612c4d57600080fd5b818601915086601f830112612c6157600080fd5b813581811115612c7057600080fd5b876020828501011115612c8257600080fd5b6020830194508093505050509250925092565b600060e08284031215611ab857600080fd5b600060208284031215612cb957600080fd5b81356001600160401b03811115612ccf57600080fd5b612b0a84828501612c95565b600060a08284031215611ab857600080fd5b600060208284031215612cff57600080fd5b81356001600160401b03811115612d1557600080fd5b612b0a84828501612cdb565b60008060408385031215612d3457600080fd5b612d3e84846129da565b915060208301356001600160401b03811115612d5957600080fd5b612a4285828601612c95565b600060808284031215611ab857600080fd5b600060208284031215612d8957600080fd5b81356001600160401b03811115612d9f57600080fd5b612b0a84828501612d65565b60008060408385031215612dbe57600080fd5b612dc884846129da565b915060208301356001600160401b03811115612de357600080fd5b612a4285828601612d65565b60008060408385031215612e0257600080fd5b612e0c84846129da565b915060208301356001600160401b03811115612e2757600080fd5b612a4285828601612cdb565b60008235603e19833603018112612e4957600080fd5b9190910192915050565b6000808335601e19843603018112612e6a57600080fd5b8301803591506001600160401b03821115612e8457600080fd5b602001915036819003821315612e9957600080fd5b9250929050565b60005b83811015612ebb578181015183820152602001612ea3565b8381111561214d5750506000910152565b60008151808452612ee4816020860160208601612ea0565b601f01601f19169290920160200192915050565b6000808335601e19843603018112612f0f57600080fd5b83016020810192503590506001600160401b03811115612f2e57600080fd5b803603831315612e9957600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b803582526000612f796020830183612ef8565b60406020860152612813604086018284612f3d565b60a081526000612fa160a0830189612ecc565b8281036020840152612fb38189612f66565b604084018890526001600160a01b038716606085015283810360808501529050612fde818587612f3d565b9998505050505050505050565b60008235603e1983360301811261300157600080fd5b90910192915050565b801515811461098157600080fd5b80356122318161300a565b602081526130446020820161303784612a9c565b6001600160a01b03169052565b60208201356040820152600061305d6040840184612ef8565b61012080606086015261307561014086018385612f3d565b92506060860135608086015261308e6080870187612feb565b9150601f19808685030160a08701526130a78484612f66565b935060a087013560c08701526130bf60c08801612a9c565b6001600160a01b03811660e088015292506130dd60e0880188612ef8565b93506101008288870301818901526130f6868684612f3d565b9550613103818a01613018565b94505050506131158186018315159052565b5090949350505050565b60208082526018908201527f4272696467654661636164653a207a65726f20746f6b656e0000000000000000604082015260600190565b60208082526025908201527f4272696467654661636164653a20657863657373697665206e617469766520616040820152641b5bdd5b9d60da1b606082015260800190565b6000602082840312156131ad57600080fd5b813561282e8161300a565b600081356131c581612a87565b6001600160a01b03168352602082810135908401526131e76040830183612feb565b60c060408501526131fb60c0850182612f66565b905061320a6060840184612ef8565b858303606087015261321d838284612f3d565b9250505061322e6080840184612ef8565b8583036080870152613241838284612f3d565b9250505060a08301356132538161300a565b80151560a0860152508091505092915050565b60208152600061282e60208301846131b8565b6020815261328d6020820161303784612a9c565b6020820135604082015260006132a66040840184612ef8565b6101008060608601526132be61012086018385612f3d565b92506132cd6060870187612feb565b9150601f19808685030160808701526132e68484612f66565b9350608087013560a08701526132fe60a08801612a9c565b6001600160a01b03811660c0880152925061331c60c0880188612ef8565b9350818786030160e0880152613333858583612f3d565b9450505061334360e08701613018565b801515868301529150613115565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000808335601e1984360301811261340057600080fd5b8301803591506001600160401b0382111561341a57600080fd5b6020019150600581901b3603821315612e9957600080fd5b60208082526023908201527f4665654d616e616765723a20706172616d73206c656e67746873206d69736d616040820152620e8c6d60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006000198214156134b5576134b561348b565b5060010190565b60208152600082356134cd81612a87565b60018060a01b038116602084015250602083013560408301526134f36040840184612ef8565b60e0606085015261350961010085018284612f3d565b9150506135196060850185612feb565b601f19808584030160808601526135308383612f66565b9250608086013560a086015261354860a08701612a9c565b6001600160a01b03811660c0870152915061356660c0870187612ef8565b9250818685030160e0870152612994848483612f3d565b6020808252601c908201527f4272696467654661636164653a20616d6f756e74206973207a65726f00000000604082015260600190565b602081528135602082015260006135ce6020840184612feb565b60a060408401526135e260c0840182612f66565b90506040840135606084015260608401356135fc81612a87565b6001600160a01b031660808481019190915261361a90850185612ef8565b848303601f190160a0860152613631838284612f3d565b9695505050505050565b602081526000823561364c81612a87565b60018060a01b038116602084015250602083013560408301526136726040840184612feb565b60e06060840152613687610100840182612f66565b90506060840135608084015260808401356136a181612a87565b6001600160a01b03811660a0850152506136be60a0850185612ef8565b848303601f190160c08601526136d5838284612f3d565b925050506136e560c08501613018565b80151560e0850152509392505050565b602081526000823561370681612a87565b60018060a01b03811660208401525060208301356040830152604083013560608301526137366060840184612feb565b60e0608084015261374b610100840182612f66565b905061375a6080850185612ef8565b601f19808685030160a0870152613772848385612f3d565b935061378160a0880188612ef8565b93509150808685030160c0870152506136d5838383612f3d565b602081528135602082015260006137b56020840184612feb565b608060408401526137c960a0840182612f66565b90506137d86040850185612ef8565b601f19808685030160608701526137f0848385612f3d565b93506137ff6060880188612ef8565b935091508086850301608087015250613631838383612f3d565b60006020828403121561382b57600080fd5b815161282e81612a87565b602081526000823561384781612a87565b60018060a01b0381166020840152506020830135604083015261386d6040840184612feb565b60a0606084015261388160c0840182612f66565b90506138906060850185612ef8565b601f19808685030160808701526138a8848385612f3d565b93506138b76080880188612ef8565b93509150808685030160a087015250613631838383612f3d565b6001600160601b03198660601b1681528460148201528284603483013760349201918201526054019392505050565b6000828210156139125761391261348b565b500390565b6001600160601b03198560601b16815283601482015281836034830137600091016034019081529392505050565b60006020828403121561395757600080fd5b5051919050565b6000806040838503121561397157600080fd5b82516001600160401b0381111561398757600080fd5b8301601f8101851361399857600080fd5b80516139a6612bd782612b58565b8181528660208385010111156139bb57600080fd5b6139cc826020830160208601612ea0565b60209590950151949694955050505050565b60008160005b84811015613a155781356139f781612a87565b6001600160a01b0316865260209586019591909101906001016139e4565b5093949350505050565b60006001600160fb1b03831115613a3557600080fd5b8260051b8083863760009401938452509192915050565b8881526001600160601b03198860601b16602082015260008751613a77816034850160208c01612ea0565b60f888901b6001600160f81b031916603491840191820152613aa7613aa060358301888a6139de565b8587613a1f565b9b9a5050505050505050505050565b60ff8616815260018060a01b0385166020820152836040820152608060608201526000612994608083018486612f3d565b60ff861681526001600160a01b038581166020830152841660408201526080606082018190526000906129949083018486612f3d565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b89815260006001600160601b0319808b60601b166020840152808a60601b166034840152508751613ba3816048850160208c01612ea0565b60f888901b6001600160f81b031916604891840191820152613bcc613aa060498301888a6139de565b9c9b505050505050505050505050565b600060208284031215613bee57600080fd5b815161282e8161300a565b60008251612e49818460208701612ea0565b60208152600061282e6020830184612ecc56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220121cd5cf347fa2628d6bf86a32412cf8de27e2ec3cdca54d112c6d67e110c10564736f6c63430008090033";

type BridgeFacadeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeFacadeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeFacade__factory extends ContractFactory {
  constructor(...args: BridgeFacadeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BridgeFacade";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeFacade> {
    return super.deploy(overrides || {}) as Promise<BridgeFacade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeFacade {
    return super.attach(address) as BridgeFacade;
  }
  override connect(signer: Signer): BridgeFacade__factory {
    return super.connect(signer) as BridgeFacade__factory;
  }
  static readonly contractName: "BridgeFacade";

  public readonly contractName: "BridgeFacade";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFacadeInterface {
    return new utils.Interface(_abi) as BridgeFacadeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFacade {
    return new Contract(address, _abi, signerOrProvider) as BridgeFacade;
  }
}
