/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  BridgeFacade,
  BridgeFacadeInterface,
} from "../../../contracts/facade/BridgeFacade";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "AddedFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "RemovedFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "UpdatedFeeToken",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "feeToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "WithdrawnFeeToken",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "__BridgeFacade_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridge_",
        type: "address",
      },
    ],
    name: "__FeeManager_init",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.AddFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "addFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "bridge",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeERC1155Parameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC1155Handler.DepositERC1155Parameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositERC1155",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeERC20Parameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC20Handler.DepositERC20Parameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositERC20",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeERC721Parameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC721Handler.DepositERC721Parameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositERC721",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeNativeParameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
        ],
        internalType: "struct INativeHandler.DepositNativeParameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositNative",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "feeToken",
            type: "address",
          },
        ],
        internalType: "struct IBridgeFacade.DepositFeeSBTParameters",
        name: "feeParams_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "string",
            name: "network",
            type: "string",
          },
          {
            internalType: "string",
            name: "receiver",
            type: "string",
          },
        ],
        internalType: "struct ISBTHandler.DepositSBTParameters",
        name: "depositParams_",
        type: "tuple",
      },
    ],
    name: "depositSBT",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "feeToken_",
        type: "address",
      },
    ],
    name: "getCommission",
    outputs: [
      {
        internalType: "uint256",
        name: "commission_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "proxiableUUID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.RemoveFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "removeFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "feeAmounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.UpdateFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "updateFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
    ],
    name: "upgradeTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "upgradeToAndCall",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newImplementation_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "signature_",
        type: "bytes",
      },
    ],
    name: "upgradeToWithSig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC1155Handler.WithdrawERC1155Parameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawERC1155",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC20Handler.WithdrawERC20Parameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
          {
            internalType: "bool",
            name: "isWrapped",
            type: "bool",
          },
        ],
        internalType: "struct IERC721Handler.WithdrawERC721Parameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "address[]",
            name: "feeTokens",
            type: "address[]",
          },
          {
            internalType: "uint256[]",
            name: "amounts",
            type: "uint256[]",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct IFeeManager.WithdrawFeeTokenParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawFeeToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct INativeHandler.WithdrawNativeParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "tokenId",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "tokenURI",
            type: "string",
          },
          {
            components: [
              {
                internalType: "bytes32",
                name: "salt",
                type: "bytes32",
              },
              {
                internalType: "bytes",
                name: "bundle",
                type: "bytes",
              },
            ],
            internalType: "struct IBundler.Bundle",
            name: "bundle",
            type: "tuple",
          },
          {
            internalType: "bytes32",
            name: "originHash",
            type: "bytes32",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "proof",
            type: "bytes",
          },
        ],
        internalType: "struct ISBTHandler.WithdrawSBTParameters",
        name: "params_",
        type: "tuple",
      },
    ],
    name: "withdrawSBT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a06040523060805234801561001457600080fd5b50608051613cfd61005a600039600081816108c10152818161090101528181610b5201528181610b9201528181610c0801528181610c480152610cc60152613cfd6000f3fe6080604052600436106101345760003560e01c806373fb5a66116100ab5780639f33cf221161006f5780639f33cf221461030f578063a77c8c861461032f578063a7f40f2f1461034f578063d93ff67814610362578063e78cea9214610375578063f334dcb2146103b357600080fd5b806373fb5a6614610289578063922e37c01461029c578063942b0e31146102bc5780639950523c146102dc5780639c9ae4f8146102ef57600080fd5b80634eb5943a116100fd5780634eb5943a146101ce5780634f1ef286146101ee57806352d046611461020157806352d1902d1461022157806363925ea214610249578063737102581461026957600080fd5b8062903e5d146101395780631087dcd11461015b5780631c2507081461016e5780633659cfe61461018e5780634915b86e146101ae575b600080fd5b34801561014557600080fd5b50610159610154366004612a0a565b6103e9565b005b610159610169366004612a69565b610577565b34801561017a57600080fd5b50610159610189366004612ab7565b610764565b34801561019a57600080fd5b506101596101a9366004612b12565b6108b6565b3480156101ba57600080fd5b506101596101c9366004612b41565b61099c565b3480156101da57600080fd5b506101596101e9366004612b41565b610a84565b6101596101fc366004612be2565b610b47565b34801561020d57600080fd5b5061015961021c366004612c74565b610bfd565b34801561022d57600080fd5b50610236610cb9565b6040519081526020015b60405180910390f35b34801561025557600080fd5b50610159610264366004612b41565b610d6c565b34801561027557600080fd5b50610159610284366004612d0a565b610e2f565b610159610297366004612a69565b610f81565b3480156102a857600080fd5b506101596102b7366004612d50565b6110f9565b3480156102c857600080fd5b506101596102d7366004612d0a565b61124b565b6101596102ea366004612d84565b61139d565b3480156102fb57600080fd5b5061015961030a366004612b12565b611589565b34801561031b57600080fd5b5061015961032a366004612dda565b611600565b34801561033b57600080fd5b5061015961034a366004612b12565b6116d8565b61015961035d366004612e0e565b61176d565b610159610370366004612e52565b61183b565b34801561038157600080fd5b5060005461039b906201000090046001600160a01b031681565b6040516001600160a01b039091168152602001610240565b3480156103bf57600080fd5b506102366103ce366004612b12565b6001600160a01b031660009081526001602052604090205490565b6000546201000090046001600160a01b0316806302fd4e2661040a846119b4565b6104176080860186612e96565b60a086013561042c60e0880160c08901612b12565b61043960e0890189612eb6565b6040518763ffffffff1660e01b815260040161045a96959493929190612ffa565b600060405180830381600087803b15801561047457600080fd5b505af1158015610488573d6000803e3d6000fd5b506000925061049d9150506080840184612e96565b6104ab906020810190612eb6565b9050111561051757604051632ddb6a5d60e21b81526001600160a01b0382169063b76da974906104df90859060040161308f565b600060405180830381600087803b1580156104f957600080fd5b505af192505050801561050a575060015b61051357610517565b5050565b60405162903e5d60e01b81526001600160a01b0382169062903e5d9061054190859060040161308f565b600060405180830381600087803b15801561055b57600080fd5b505af115801561056f573d6000803e3d6000fd5b505050505050565b60006105866020830183612b12565b6001600160a01b031614156105b65760405162461bcd60e51b81526004016105ad9061318b565b60405180910390fd5b6105cb6105c66020840184612b12565b611a04565b156105e85760405162461bcd60e51b81526004016105ad906131c2565b6000546201000090046001600160a01b031661060a60c0830160a08401613207565b156106865761061c6020830183612b12565b60405163079cc67960e41b8152336004820152602084013560248201526001600160a01b0391909116906379cc679090604401600060405180830381600087803b15801561066957600080fd5b505af115801561067d573d6000803e3d6000fd5b50505050610701565b6106936020830183612b12565b604051632142170760e11b81523360048201526001600160a01b0383811660248301526020850135604483015291909116906342842e0e90606401600060405180830381600087803b1580156106e857600080fd5b505af11580156106fc573d6000803e3d6000fd5b505050505b604051636a38abbf60e01b81526001600160a01b03821690636a38abbf9061072d9085906004016132d2565b600060405180830381600087803b15801561074757600080fd5b505af115801561075b573d6000803e3d6000fd5b50505050505050565b6000546201000090046001600160a01b0316806302fd4e2661078584611b06565b6107926060860186612e96565b60808601356107a760c0880160a08901612b12565b6107b460c0890189612eb6565b6040518763ffffffff1660e01b81526004016107d596959493929190612ffa565b600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b50600092506108189150506060840184612e96565b610826906020810190612eb6565b9050111561088a57604051639ae00a5760e01b81526001600160a01b03821690639ae00a579061085a9085906004016132e5565b600060405180830381600087803b15801561087457600080fd5b505af1925050508015610885575060015b610513575b604051630384a0e160e31b81526001600160a01b03821690631c250708906105419085906004016132e5565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614156108ff5760405162461bcd60e51b81526004016105ad906133bd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610931611b3a565b6001600160a01b0316146109575760405162461bcd60e51b81526004016105ad90613409565b61096081611b56565b6109998160005b6040519080825280601f01601f191660200182016040528015610991576020820181803683370190505b506000611bad565b50565b6109a96020820182613455565b90506109b58280613455565b9050146109d45760405162461bcd60e51b81526004016105ad9061349e565b610a0360005b6109e48380613455565b6109f16020860186613455565b6109fe6040880188612eb6565b611d27565b60005b610a108280613455565b905081101561051357610a74610a268380613455565b83818110610a3657610a366134e1565b9050602002016020810190610a4b9190612b12565b610a586020850185613455565b84818110610a6857610a686134e1565b90506020020135611e6a565b610a7d8161350d565b9050610a06565b610a916020820182613455565b9050610a9d8280613455565b905014610abc5760405162461bcd60e51b81526004016105ad9061349e565b610ac660016109da565b60005b610ad38280613455565b905081101561051357610b37610ae98380613455565b83818110610af957610af96134e1565b9050602002016020810190610b0e9190612b12565b610b1b6020850185613455565b84818110610b2b57610b2b6134e1565b90506020020135611f21565b610b408161350d565b9050610ac9565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610b905760405162461bcd60e51b81526004016105ad906133bd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610bc2611b3a565b6001600160a01b031614610be85760405162461bcd60e51b81526004016105ad90613409565b610bf182611b56565b61051382826001611bad565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161415610c465760405162461bcd60e51b81526004016105ad906133bd565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316610c78611b3a565b6001600160a01b031614610c9e5760405162461bcd60e51b81526004016105ad90613409565b610ca9838383611feb565b610cb4836000610967565b505050565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610d595760405162461bcd60e51b815260206004820152603860248201527f555550535570677261646561626c653a206d757374206e6f742062652063616c60448201527f6c6564207468726f7567682064656c656761746563616c6c000000000000000060648201526084016105ad565b50600080516020613c8183398151915290565b610d796020820182613455565b9050610d858280613455565b905014610da45760405162461bcd60e51b81526004016105ad9061349e565b610dae60026109da565b60005b610dbb8280613455565b905081101561051357610e1f610dd18380613455565b83818110610de157610de16134e1565b9050602002016020810190610df69190612b12565b610e036020850185613455565b84818110610e1357610e136134e1565b9050602002013561207e565b610e288161350d565b9050610db1565b6000546201000090046001600160a01b0316806302fd4e26610e5084611b06565b610e5d6060860186612e96565b6080860135610e7260c0880160a08901612b12565b610e7f60c0890189612eb6565b6040518763ffffffff1660e01b8152600401610ea096959493929190612ffa565b600060405180830381600087803b158015610eba57600080fd5b505af1158015610ece573d6000803e3d6000fd5b5060009250610ee39150506060840184612e96565b610ef1906020810190612eb6565b90501115610f55576040516326a0c35360e21b81526001600160a01b03821690639a830d4c90610f25908590600401613528565b600060405180830381600087803b158015610f3f57600080fd5b505af1925050508015610f50575060015b610513575b604051630e6e204b60e31b81526001600160a01b03821690637371025890610541908590600401613528565b6000610f906020830183612b12565b6001600160a01b03161415610fb75760405162461bcd60e51b81526004016105ad9061318b565b6000816020013511610fdb5760405162461bcd60e51b81526004016105ad906135e9565b610feb6105c66020840184612b12565b156110085760405162461bcd60e51b81526004016105ad906131c2565b6000546201000090046001600160a01b031661102a60c0830160a08401613207565b156110a65761103c6020830183612b12565b60405163079cc67960e41b8152336004820152602084013560248201526001600160a01b0391909116906379cc679090604401600060405180830381600087803b15801561108957600080fd5b505af115801561109d573d6000803e3d6000fd5b505050506110cd565b6110cd3382602085018035906110bc9087612b12565b6001600160a01b0316929190612134565b60405163bebd5a0b60e01b81526001600160a01b0382169063bebd5a0b9061072d9085906004016132d2565b6000546201000090046001600160a01b0316806302fd4e2661111a846121a5565b6111276020860186612e96565b604086013561113c6080880160608901612b12565b6111496080890189612eb6565b6040518763ffffffff1660e01b815260040161116a96959493929190612ffa565b600060405180830381600087803b15801561118457600080fd5b505af1158015611198573d6000803e3d6000fd5b50600092506111ad9150506020840184612e96565b6111bb906020810190612eb6565b9050111561121f5760405163c4f54e2160e01b81526001600160a01b0382169063c4f54e21906111ef908590600401613620565b600060405180830381600087803b15801561120957600080fd5b505af192505050801561121a575060015b610513575b604051630248b8df60e61b81526001600160a01b0382169063922e37c090610541908590600401613620565b6000546201000090046001600160a01b0316806302fd4e2661126c846121b9565b6112796040860186612e96565b606086013561128e60a0880160808901612b12565b61129b60a0890189612eb6565b6040518763ffffffff1660e01b81526004016112bc96959493929190612ffa565b600060405180830381600087803b1580156112d657600080fd5b505af11580156112ea573d6000803e3d6000fd5b50600092506112ff9150506040840184612e96565b61130d906020810190612eb6565b905011156113715760405163e53507bd60e01b81526001600160a01b0382169063e53507bd9061134190859060040161369d565b600060405180830381600087803b15801561135b57600080fd5b505af192505050801561136c575060015b610513575b60405163942b0e3160e01b81526001600160a01b0382169063942b0e319061054190859060040161369d565b60006113ac6020830183612b12565b6001600160a01b031614156113d35760405162461bcd60e51b81526004016105ad9061318b565b60008160400135116113f75760405162461bcd60e51b81526004016105ad906135e9565b6114076105c66020840184612b12565b156114245760405162461bcd60e51b81526004016105ad906131c2565b6000546201000090046001600160a01b031661144660e0830160c08401613207565b156114cc576114586020830183612b12565b6040805163124d91e560e01b8152336004820152602085013560248201529084013560448201526001600160a01b03919091169063124d91e590606401600060405180830381600087803b1580156114af57600080fd5b505af11580156114c3573d6000803e3d6000fd5b5050505061155d565b6114d96020830183612b12565b60408051637921219560e11b81523360048201526001600160a01b0384811660248301526020860135604483015291850135606482015260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561154457600080fd5b505af1158015611558573d6000803e3d6000fd5b505050505b604051634b4d778360e11b81526001600160a01b0382169063969aef069061072d908590600401613757565b600061159560016121fb565b905080156115ad576000805461ff0019166101001790555b6115b6826116d8565b8015610513576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b61160d6040820182613455565b905061161c6020830183613455565b90501461163b5760405162461bcd60e51b81526004016105ad9061349e565b61164481612288565b60005b6116546020830183613455565b9050811015610513576116c861166d6020840184612b12565b61167a6020850185613455565b8481811061168a5761168a6134e1565b905060200201602081019061169f9190612b12565b6116ac6040860186613455565b858181106116bc576116bc6134e1565b905060200201356123fb565b6116d18161350d565b9050611647565b600054610100900460ff166117435760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b60648201526084016105ad565b600080546001600160a01b03909216620100000262010000600160b01b0319909216919091179055565b803561178b5760405162461bcd60e51b81526004016105ad906135e9565b803561179d6105c66020850185612b12565b146117ea5760405162461bcd60e51b815260206004820152601a60248201527f4272696467654661636164653a2077726f6e6720616d6f756e7400000000000060448201526064016105ad565b60005460405163b27588e560e01b8152620100009091046001600160a01b03169063b27588e5908335906118229085906004016137fd565b6000604051808303818588803b15801561074757600080fd5b600061184a6020830183612b12565b6001600160a01b031614156118715760405162461bcd60e51b81526004016105ad9061318b565b3361187f6020830183612b12565b6040516331a9108f60e11b8152602084013560048201526001600160a01b039190911690636352211e9060240160206040518083038186803b1580156118c457600080fd5b505afa1580156118d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118fc919061387b565b6001600160a01b0316146119525760405162461bcd60e51b815260206004820152601e60248201527f4272696467654661636164653a20696e76616c696420746f6b656e206964000060448201526064016105ad565b6119626105c66020840184612b12565b1561197f5760405162461bcd60e51b81526004016105ad906131c2565b60005460405163755f382360e01b8152620100009091046001600160a01b03169063755f382390610541908490600401613898565b60606119c36020830183612b12565b60208301356119d56040850185612eb6565b85606001356040516020016119ee959493929190613933565b6040516020818303038152906040529050919050565b6001600160a01b038116600090815260016020526040902054349080611a6c5760405162461bcd60e51b815260206004820152601b60248201527f4665654d616e616765723a2077726f6e672066656520746f6b656e000000000060448201526064016105ad565b6001600160a01b038316611adb5781811115611aca5760405162461bcd60e51b815260206004820152601f60248201527f4665654d616e616765723a2077726f6e67206e617469766520616d6f756e740060448201526064016105ad565b611ad48183613962565b9150611b00565b6001600160a01b0383811614611b0057611b006001600160a01b038416333084612134565b50919050565b6060611b156020830183612b12565b6020830135611b276040850185612eb6565b6040516020016119ee9493929190613979565b600080516020613c81833981519152546001600160a01b031690565b60405162461bcd60e51b815260206004820152602660248201527f4665654d616e616765723a20746869732075706772616465206d6574686f642060448201526534b99037b33360d11b60648201526084016105ad565b7f4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd91435460ff1615611be057610cb48361257d565b826001600160a01b03166352d1902d6040518163ffffffff1660e01b815260040160206040518083038186803b158015611c1957600080fd5b505afa925050508015611c49575060408051601f3d908101601f19168201909252611c46918101906139a7565b60015b611cac5760405162461bcd60e51b815260206004820152602e60248201527f45524331393637557067726164653a206e657720696d706c656d656e7461746960448201526d6f6e206973206e6f74205555505360901b60648201526084016105ad565b600080516020613c818339815191528114611d1b5760405162461bcd60e51b815260206004820152602960248201527f45524331393637557067726164653a20756e737570706f727465642070726f786044820152681a58589b195555525160ba1b60648201526084016105ad565b50610cb4838383612619565b6000805460405163413f04cf60e11b815260ff8a166004820152306024820152620100009091046001600160a01b031691908190839063827e099e9060440160006040518083038186803b158015611d7e57600080fd5b505afa158015611d92573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611dba91908101906139c0565b9150915060008130848d8d8d8d8d604051602001611ddf989796959493929190613aae565b60408051601f19818403018152908290528051602090910120630e3754f960e41b825291506001600160a01b0385169063e3754f9090611e2b908e90309086908c908c90600401613b18565b600060405180830381600087803b158015611e4557600080fd5b505af1158015611e59573d6000803e3d6000fd5b505050505050505050505050505050565b6001600160a01b03821660009081526001602052604090205415611ed05760405162461bcd60e51b815260206004820181905260248201527f4665654d616e616765723a20746f6b656e20616c72656164792065786973747360448201526064016105ad565b6001600160a01b038216600081815260016020908152604091829020849055815192835282018390527f5d966ab5c51224ee3c5146e53a0b57969d97d0e1779f52a1017813c13344efc491016115f4565b6001600160a01b0382166000908152600160205260409020548114611f9a5760405162461bcd60e51b815260206004820152602960248201527f4665654d616e616765723a2077726f6e6720746f6b656e2061646472657373206044820152681bdc88185b5bdd5b9d60ba1b60648201526084016105ad565b6001600160a01b038216600081815260016020908152604080832092909255815192835282018390527feac220a493a0693e32f1240aae311de65b2d84391a9ba8310fcaf359d7c9bd8f91016115f4565b6001600160a01b0383166120415760405162461bcd60e51b815260206004820152601860248201527f4665654d616e616765723a207a65726f2061646472657373000000000000000060448201526064016105ad565b6000546201000090046001600160a01b0316637d1e764b6004308686866040518663ffffffff1660e01b815260040161072d959493929190613b49565b6001600160a01b0382166000908152600160205260409020546120e35760405162461bcd60e51b815260206004820152601f60248201527f4665654d616e616765723a20746f6b656e20646f65736e27742065786973740060448201526064016105ad565b6001600160a01b038216600081815260016020908152604091829020849055815192835282018390527f70698787bb7456af2d4339ba1e7d059c4eda7c473412e7ed2c0d5b361a49d50a91016115f4565b6040516001600160a01b038085166024830152831660448201526064810182905261219f9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261263e565b50505050565b6040805182356020820152606091016119ee565b60606121c86020830183612b12565b82602001356040516020016119ee92919060609290921b6bffffffffffffffffffffffff19168252601482015260340190565b60008054610100900460ff1615612242578160ff16600114801561221e5750303b155b61223a5760405162461bcd60e51b81526004016105ad90613b7f565b506000919050565b60005460ff8084169116106122695760405162461bcd60e51b81526004016105ad90613b7f565b506000805460ff191660ff92909216919091179055600190565b919050565b6000805460405163413f04cf60e11b81526003600482018190523060248301526001600160a01b03620100009093049290921692908190849063827e099e9060440160006040518083038186803b1580156122e257600080fd5b505afa1580156122f6573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261231e91908101906139c0565b90925090506000816123336020880188612b12565b30858761234360208c018c613455565b61235060408e018e613455565b60405160200161236899989796959493929190613bcd565b60408051601f19818403018152919052805160209091012090506001600160a01b03851663e3754f908530846123a160608c018c612eb6565b6040518663ffffffff1660e01b81526004016123c1959493929190613b18565b600060405180830381600087803b1580156123db57600080fd5b505af11580156123ef573d6000803e3d6000fd5b50505050505050505050565b6001600160a01b0382811614156124545760405162461bcd60e51b815260206004820152601c60248201527f4665654d616e616765723a20636f6d6d697373696f6e20746f6b656e0000000060448201526064016105ad565b6001600160a01b038216612519576000836001600160a01b03168260405160006040518083038185875af1925050503d80600081146124af576040519150601f19603f3d011682016040523d82523d6000602084013e6124b4565b606091505b50509050806125135760405162461bcd60e51b815260206004820152602560248201527f4665654d616e616765723a206661696c656420746f207769746864726177206e604482015264617469766560d81b60648201526084016105ad565b5061252d565b61252d6001600160a01b0383168483612710565b604080516001600160a01b038086168252841660208201529081018290527f0221f5dbeb176269bc9dbce8b10193c570930431bbe525ae79b4599910500bf49060600160405180910390a1505050565b6001600160a01b0381163b6125ea5760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084016105ad565b600080516020613c8183398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b61262283612740565b60008251118061262f5750805b15610cb45761219f8383612780565b6000612693826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166127ac9092919063ffffffff16565b805190915015610cb457808060200190518101906126b19190613c3e565b610cb45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016105ad565b6040516001600160a01b038316602482015260448101829052610cb490849063a9059cbb60e01b90606401612168565b6127498161257d565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b60606127a58383604051806060016040528060278152602001613ca1602791396127c3565b9392505050565b60606127bb84846000856128a0565b949350505050565b60606001600160a01b0384163b61282b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016105ad565b600080856001600160a01b0316856040516128469190613c5b565b600060405180830381855af49150503d8060008114612881576040519150601f19603f3d011682016040523d82523d6000602084013e612886565b606091505b50915091506128968282866129d1565b9695505050505050565b6060824710156129015760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016105ad565b6001600160a01b0385163b6129585760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016105ad565b600080866001600160a01b031685876040516129749190613c5b565b60006040518083038185875af1925050503d80600081146129b1576040519150601f19603f3d011682016040523d82523d6000602084013e6129b6565b606091505b50915091506129c68282866129d1565b979650505050505050565b606083156129e05750816127a5565b8251156129f05782518084602001fd5b8160405162461bcd60e51b81526004016105ad9190613c6d565b600060208284031215612a1c57600080fd5b81356001600160401b03811115612a3257600080fd5b820161012081850312156127a557600080fd5b600060208284031215611b0057600080fd5b600060c08284031215611b0057600080fd5b60008060408385031215612a7c57600080fd5b612a868484612a45565b915060208301356001600160401b03811115612aa157600080fd5b612aad85828601612a57565b9150509250929050565b600060208284031215612ac957600080fd5b81356001600160401b03811115612adf57600080fd5b820161010081850312156127a557600080fd5b6001600160a01b038116811461099957600080fd5b803561228381612af2565b600060208284031215612b2457600080fd5b81356127a581612af2565b600060608284031215611b0057600080fd5b600060208284031215612b5357600080fd5b81356001600160401b03811115612b6957600080fd5b6127bb84828501612b2f565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b0381118282101715612bb357612bb3612b75565b604052919050565b60006001600160401b03821115612bd457612bd4612b75565b50601f01601f191660200190565b60008060408385031215612bf557600080fd5b8235612c0081612af2565b915060208301356001600160401b03811115612c1b57600080fd5b8301601f81018513612c2c57600080fd5b8035612c3f612c3a82612bbb565b612b8b565b818152866020838501011115612c5457600080fd5b816020840160208301376000602083830101528093505050509250929050565b600080600060408486031215612c8957600080fd5b8335612c9481612af2565b925060208401356001600160401b0380821115612cb057600080fd5b818601915086601f830112612cc457600080fd5b813581811115612cd357600080fd5b876020828501011115612ce557600080fd5b6020830194508093505050509250925092565b600060e08284031215611b0057600080fd5b600060208284031215612d1c57600080fd5b81356001600160401b03811115612d3257600080fd5b6127bb84828501612cf8565b600060a08284031215611b0057600080fd5b600060208284031215612d6257600080fd5b81356001600160401b03811115612d7857600080fd5b6127bb84828501612d3e565b60008060408385031215612d9757600080fd5b612da18484612a45565b915060208301356001600160401b03811115612dbc57600080fd5b612aad85828601612cf8565b600060808284031215611b0057600080fd5b600060208284031215612dec57600080fd5b81356001600160401b03811115612e0257600080fd5b6127bb84828501612dc8565b60008060408385031215612e2157600080fd5b612e2b8484612a45565b915060208301356001600160401b03811115612e4657600080fd5b612aad85828601612dc8565b60008060408385031215612e6557600080fd5b612e6f8484612a45565b915060208301356001600160401b03811115612e8a57600080fd5b612aad85828601612d3e565b60008235603e19833603018112612eac57600080fd5b9190910192915050565b6000808335601e19843603018112612ecd57600080fd5b8301803591506001600160401b03821115612ee757600080fd5b602001915036819003821315612efc57600080fd5b9250929050565b60005b83811015612f1e578181015183820152602001612f06565b8381111561219f5750506000910152565b60008151808452612f47816020860160208601612f03565b601f01601f19169290920160200192915050565b6000808335601e19843603018112612f7257600080fd5b83016020810192503590506001600160401b03811115612f9157600080fd5b803603831315612efc57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b803582526000612fdc6020830183612f5b565b60406020860152612ff1604086018284612fa0565b95945050505050565b60a08152600061300d60a0830189612f2f565b828103602084015261301f8189612fc9565b604084018890526001600160a01b03871660608501528381036080850152905061304a818587612fa0565b9998505050505050505050565b60008235603e1983360301811261306d57600080fd5b90910192915050565b801515811461099957600080fd5b803561228381613076565b602081526130b0602082016130a384612b07565b6001600160a01b03169052565b6020820135604082015260006130c96040840184612f5b565b6101208060608601526130e161014086018385612fa0565b9250606086013560808601526130fa6080870187613057565b9150601f19808685030160a08701526131138484612fc9565b935060a087013560c087015261312b60c08801612b07565b6001600160a01b03811660e0880152925061314960e0880188612f5b565b9350610100828887030181890152613162868684612fa0565b955061316f818a01613084565b94505050506131818186018315159052565b5090949350505050565b60208082526018908201527f4272696467654661636164653a207a65726f20746f6b656e0000000000000000604082015260600190565b60208082526025908201527f4272696467654661636164653a20657863657373697665206e617469766520616040820152641b5bdd5b9d60da1b606082015260800190565b60006020828403121561321957600080fd5b81356127a581613076565b6000813561323181612af2565b6001600160a01b03168352602082810135908401526132536040830183613057565b60c0604085015261326760c0850182612fc9565b90506132766060840184612f5b565b8583036060870152613289838284612fa0565b9250505061329a6080840184612f5b565b85830360808701526132ad838284612fa0565b9250505060a08301356132bf81613076565b80151560a0860152508091505092915050565b6020815260006127a56020830184613224565b602081526132f9602082016130a384612b07565b6020820135604082015260006133126040840184612f5b565b61010080606086015261332a61012086018385612fa0565b92506133396060870187613057565b9150601f19808685030160808701526133528484612fc9565b9350608087013560a087015261336a60a08801612b07565b6001600160a01b03811660c0880152925061338860c0880188612f5b565b9350818786030160e088015261339f858583612fa0565b945050506133af60e08701613084565b801515868301529150613181565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b19195b1959d85d1958d85b1b60a21b606082015260800190565b6020808252602c908201527f46756e6374696f6e206d7573742062652063616c6c6564207468726f7567682060408201526b6163746976652070726f787960a01b606082015260800190565b6000808335601e1984360301811261346c57600080fd5b8301803591506001600160401b0382111561348657600080fd5b6020019150600581901b3603821315612efc57600080fd5b60208082526023908201527f4665654d616e616765723a20706172616d73206c656e67746873206d69736d616040820152620e8c6d60eb1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415613521576135216134f7565b5060010190565b602081526000823561353981612af2565b60018060a01b0381166020840152506020830135604083015261355f6040840184612f5b565b60e0606085015261357561010085018284612fa0565b9150506135856060850185613057565b601f198085840301608086015261359c8383612fc9565b9250608086013560a08601526135b460a08701612b07565b6001600160a01b03811660c087015291506135d260c0870187612f5b565b9250818685030160e08701526129c6848483612fa0565b6020808252601c908201527f4272696467654661636164653a20616d6f756e74206973207a65726f00000000604082015260600190565b6020815281356020820152600061363a6020840184613057565b60a0604084015261364e60c0840182612fc9565b905060408401356060840152606084013561366881612af2565b6001600160a01b031660808481019190915261368690850185612f5b565b848303601f190160a0860152612896838284612fa0565b60208152600082356136ae81612af2565b60018060a01b038116602084015250602083013560408301526136d46040840184613057565b60e060608401526136e9610100840182612fc9565b905060608401356080840152608084013561370381612af2565b6001600160a01b03811660a08501525061372060a0850185612f5b565b848303601f190160c0860152613737838284612fa0565b9250505061374760c08501613084565b80151560e0850152509392505050565b602081526000823561376881612af2565b60018060a01b03811660208401525060208301356040830152604083013560608301526137986060840184613057565b60e060808401526137ad610100840182612fc9565b90506137bc6080850185612f5b565b601f19808685030160a08701526137d4848385612fa0565b93506137e360a0880188612f5b565b93509150808685030160c087015250613737838383612fa0565b602081528135602082015260006138176020840184613057565b6080604084015261382b60a0840182612fc9565b905061383a6040850185612f5b565b601f1980868503016060870152613852848385612fa0565b93506138616060880188612f5b565b935091508086850301608087015250612896838383612fa0565b60006020828403121561388d57600080fd5b81516127a581612af2565b60208152600082356138a981612af2565b60018060a01b038116602084015250602083013560408301526138cf6040840184613057565b60a060608401526138e360c0840182612fc9565b90506138f26060850185612f5b565b601f198086850301608087015261390a848385612fa0565b93506139196080880188612f5b565b93509150808685030160a087015250612896838383612fa0565b6001600160601b03198660601b1681528460148201528284603483013760349201918201526054019392505050565b600082821015613974576139746134f7565b500390565b6001600160601b03198560601b16815283601482015281836034830137600091016034019081529392505050565b6000602082840312156139b957600080fd5b5051919050565b600080604083850312156139d357600080fd5b82516001600160401b038111156139e957600080fd5b8301601f810185136139fa57600080fd5b8051613a08612c3a82612bbb565b818152866020838501011115613a1d57600080fd5b613a2e826020830160208601612f03565b60209590950151949694955050505050565b60008160005b84811015613a77578135613a5981612af2565b6001600160a01b031686526020958601959190910190600101613a46565b5093949350505050565b60006001600160fb1b03831115613a9757600080fd5b8260051b8083863760009401938452509192915050565b8881526001600160601b03198860601b16602082015260008751613ad9816034850160208c01612f03565b60f888901b6001600160f81b031916603491840191820152613b09613b0260358301888a613a40565b8587613a81565b9b9a5050505050505050505050565b60ff8616815260018060a01b03851660208201528360408201526080606082015260006129c6608083018486612fa0565b60ff861681526001600160a01b038581166020830152841660408201526080606082018190526000906129c69083018486612fa0565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b89815260006001600160601b0319808b60601b166020840152808a60601b166034840152508751613c05816048850160208c01612f03565b60f888901b6001600160f81b031916604891840191820152613c2e613b0260498301888a613a40565b9c9b505050505050505050505050565b600060208284031215613c5057600080fd5b81516127a581613076565b60008251612eac818460208701612f03565b6020815260006127a56020830184612f2f56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212201d10267f5d7e6092c6e2d04d8b3ced40f17255056de1b76e88d263ee66ec41ea64736f6c63430008090033";

type BridgeFacadeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BridgeFacadeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BridgeFacade__factory extends ContractFactory {
  constructor(...args: BridgeFacadeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "BridgeFacade";
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<BridgeFacade> {
    return super.deploy(overrides || {}) as Promise<BridgeFacade>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): BridgeFacade {
    return super.attach(address) as BridgeFacade;
  }
  override connect(signer: Signer): BridgeFacade__factory {
    return super.connect(signer) as BridgeFacade__factory;
  }
  static readonly contractName: "BridgeFacade";

  public readonly contractName: "BridgeFacade";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BridgeFacadeInterface {
    return new utils.Interface(_abi) as BridgeFacadeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BridgeFacade {
    return new Contract(address, _abi, signerOrProvider) as BridgeFacade;
  }
}
