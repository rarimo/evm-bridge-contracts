/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BytesLike,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC1967ProxyMock,
  ERC1967ProxyMockInterface,
} from "../../../../contracts/mocks/helpers/ERC1967ProxyMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "logic_",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "previousAdmin",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newAdmin",
        type: "address",
      },
    ],
    name: "AdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "beacon",
        type: "address",
      },
    ],
    name: "BeaconUpgraded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    name: "Upgraded",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081f38038061081f83398101604081905261002f9161035a565b818161005c60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610428565b6000805160206107d8833981519152146100785761007861044d565b6100848282600061008d565b505050506104b2565b610096836100c3565b6000825111806100a35750805b156100be576100bc838361010360201b61008b1760201c565b505b505050565b6100cc8161012f565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b606061012883836040518060600160405280602781526020016107f8602791396101ef565b9392505050565b610142816102cd60201b6100b71760201c565b6101a95760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101ce6000805160206107d883398151915260001b6102dc60201b6100c61760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102575760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084016101a0565b600080856001600160a01b0316856040516102729190610463565b600060405180830381855af49150503d80600081146102ad576040519150601f19603f3d011682016040523d82523d6000602084013e6102b2565b606091505b5090925090506102c38282866102df565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102ee575081610128565b8251156102fe5782518084602001fd5b8160405162461bcd60e51b81526004016101a0919061047f565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610349578181015183820152602001610331565b838111156100bc5750506000910152565b6000806040838503121561036d57600080fd5b82516001600160a01b038116811461038457600080fd5b60208401519092506001600160401b03808211156103a157600080fd5b818501915085601f8301126103b557600080fd5b8151818111156103c7576103c7610318565b604051601f8201601f19908116603f011681019083821181831017156103ef576103ef610318565b8160405282815288602084870101111561040857600080fd5b61041983602083016020880161032e565b80955050505050509250929050565b60008282101561044857634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161047581846020870161032e565b9190910192915050565b602081526000825180602084015261049e81604085016020870161032e565b601f01601f19169190910160400192915050565b610317806104c16000396000f3fe6080604052600436106100225760003560e01c80635c60da1b1461003957610031565b366100315761002f61006a565b005b61002f61006a565b34801561004557600080fd5b5061004e61007c565b6040516001600160a01b03909116815260200160405180910390f35b61007a6100756100c9565b6100fc565b565b60006100866100c9565b905090565b60606100b083836040518060600160405280602781526020016102bb60279139610120565b9392505050565b6001600160a01b03163b151590565b90565b60006100867f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b3660008037600080366000845af43d6000803e80801561011b573d6000f35b3d6000fd5b60606001600160a01b0384163b61018d5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b0316856040516101a8919061026b565b600060405180830381855af49150503d80600081146101e3576040519150601f19603f3d011682016040523d82523d6000602084013e6101e8565b606091505b50915091506101f8828286610202565b9695505050505050565b606083156102115750816100b0565b8251156102215782518084602001fd5b8160405162461bcd60e51b81526004016101849190610287565b60005b8381101561025657818101518382015260200161023e565b83811115610265576000848401525b50505050565b6000825161027d81846020870161023b565b9190910192915050565b60208152600082518060208401526102a681604085016020870161023b565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220351f47bda627724874a98abfc22ccab36bdf55aac773e0e5329f63fae96f30bf64736f6c63430008090033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564";

type ERC1967ProxyMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1967ProxyMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1967ProxyMock__factory extends ContractFactory {
  constructor(...args: ERC1967ProxyMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ERC1967ProxyMock";
  }

  override deploy(
    logic_: PromiseOrValue<string>,
    data_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1967ProxyMock> {
    return super.deploy(
      logic_,
      data_,
      overrides || {}
    ) as Promise<ERC1967ProxyMock>;
  }
  override getDeployTransaction(
    logic_: PromiseOrValue<string>,
    data_: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(logic_, data_, overrides || {});
  }
  override attach(address: string): ERC1967ProxyMock {
    return super.attach(address) as ERC1967ProxyMock;
  }
  override connect(signer: Signer): ERC1967ProxyMock__factory {
    return super.connect(signer) as ERC1967ProxyMock__factory;
  }
  static readonly contractName: "ERC1967ProxyMock";

  public readonly contractName: "ERC1967ProxyMock";

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1967ProxyMockInterface {
    return new utils.Interface(_abi) as ERC1967ProxyMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1967ProxyMock {
    return new Contract(address, _abi, signerOrProvider) as ERC1967ProxyMock;
  }
}
